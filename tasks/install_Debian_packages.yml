---
- name: Run the equivalent of "apt update" as a separate step.
  ansible.builtin.apt:
    update_cache: true
  become: true
  changed_when: false

- name: Install apt packages.
  ansible.builtin.apt:
    name:
      "{{ \
        lookup(\
          'ansible.builtin.vars',\
          'list_of_' + type + '_packages',\
          default=''\
        ) \
      }}"
    state: present
  when: >-
    lookup(
      'ansible.builtin.vars',
      'install_' + type + '_packages',
      default='false'
    ) is truthy(convert_bool=True)
  loop: "{{ package_types }}"
  loop_control:
    loop_var: type
  become: true

- name: Make sure snapd is started
  ansible.builtin.service:
    name: snapd
    state: started
  become: true

- name: Install snap packages.
  community.general.snap:
    name:
      "{{ \
        lookup(\
          'ansible.builtin.vars',\
          'list_of_' + type + '_snap_packages',\
          default=''\
        ) \
      }}"
    state: present
    classic: true
  when: >-
    lookup(
      'ansible.builtin.vars',
      'install_' + type + '_snap_packages',
      default='false'
    ) is truthy(convert_bool=True)
  loop: "{{ package_types }}"
  loop_control:
    loop_var: type
  become: true

- name: Install dependencies of ueberzug.
  ansible.builtin.apt:
    name: "{{ list_of_ueberzug_dependencies }}"
    state: present
  when: install_multimedia_pip_packages is truthy(convert_bool=True)
  become: true


- name: Install pip packages.
  ansible.builtin.pip:
    executable: pip3
    name:
      "{{ \
        lookup(\
          'ansible.builtin.vars',\
          'list_of_' + type + '_pip_packages',\
          default=''\
        ) \
      }}"
    state: present
  when: >-
    lookup(
      'ansible.builtin.vars',
      'install_' + type + '_pip_packages',
      default='false'
    ) is truthy(convert_bool=True)
  loop: "{{ package_types }}"
  loop_control:
    loop_var: type
  become: true
